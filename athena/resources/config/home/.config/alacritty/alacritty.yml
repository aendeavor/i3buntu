# Configuration for Alacritty, the GPU enhanced terminal emulator

window:
  # Window dimensions (changes require restart)
  #
  # Specified in number of columns/lines, not pixels. If both are zero this
  # setting is ignored.
  dimensions:
    columns: 125
    lines: 33

  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is not scaled by
  # DPI and the specified value is always added at both opposing sides.
  padding:
    x: 0
    y: 0

  # Spread additional padding evenly around the terminal content.
  dynamic_padding: true

  # Window decorations
  #
  # Available values:
  # - full: borders and title bar
  # - none: neither borders nor title bar
  # - transparent: title bar, transparent background and title bar buttons
  # - buttonless: title bar, transparent background, but no title bar buttons
  decorations: none

scrolling:
  # maximum number of lines in the scrollback buffer. Specifying '0' will
  # disable scrolling.
  history: 800

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  multiplier: 2

# Font configuration (changes require restart)
font:
  # The normal (roman) font face to use.
  # Style can be specified to pick a specific face.
  normal:
    family: "Fura Code NF"
    style: "Regular"

  # The bold font face
  bold:
    family: "Fura Mono NF"

  # The italic font face
  italic:
    family: "Fura Mono NF"
    style: "Medium Italic"

  # Point size of the font
  size: 13.0

  # Offset is the extra space around each character. offset.y can be thought of
  # as modifying the linespacing, and offset.x as modifying the letter spacing.
  offset:
    x: 0
    y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increase the x offset to move the glyph to
  # the right, increase the y offset to move the glyph upward.
  glyph_offset:
    x: 0
    y: 0

  # Thin stroke font rendering (macOS only)
  #
  # Thin strokes are suitable for retina displays, but for non-retina you
  # probably want this set to false.
  #
  # macOS >= 10.14.x:
  #
  # If the font quality on non-retina display looks bad then set
  # `use_thin_strokes` to `true` and enable font smoothing by running the
  # following command:
  #   `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`
  #
  # This is a global setting and will require a log out or restart to take
  # effect.
  use_thin_strokes: true

# When true, bold text is drawn using the bright variant of colors.
draw_bold_text_with_bright_colors: false

# Use custom cursor colors. If true, display the cursor in the cursor.foreground
# and cursor.background colors, otherwise invert the colors of the cursor.
custom_cursor_colors: true

# Colors
colors:
  # Default colours
  primary:
    background: '0x1E1F29'
    foreground: '0xC8C6C5'

  # Colors that should be used to draw the terminal cursor. If these are unset,
  # the cursor colour will be the inverse of the cell colour.
  cursor:
  #   text: '0x2e2e2d'
    cursor: '0xC8C5C5'

  # Normal colors
  normal:
    black:   '0x2E2828'
    red:     '0xC04B57'
    green:   '0x8C9440'
    yellow:  '0xDE935F'
    blue:    '0x5F819D'
    magenta: '0x7F678F'
    cyan:    '0x54665B'
    white:   '0x807270'

  # Bright colors
  bright:
    black:   '0x413737'
    red:     '0xCC6672'
    green:   '0xB5DD68'
    yellow:  '0xE9B270'
    blue:    '0x81A2BE'
    magenta: '0xB294BB'
    cyan:    '0x809A83'
    white:   '0xC8C5C5'

  # Dim colors (Optional)
  dim:
    black:   '0x0F0F11'
    red:     '0x571616'
    green:   '0x4D5123'
    yellow:  '0x8E5E3D'
    blue:    '0x232F3A'
    magenta: '0x3D2F41'
    cyan:    '0x3C5A56'
    white:   '0x484D52'

  indexed_colors: []

bell:
  animation: EaseOutExpo
  color: '0xffffff'
  duration: 0 # completely disabled

background_opacity: 0.9

key_bindings:
  - { key: V,        mods: Command,       action: Paste                        }
  - { key: C,        mods: Command,       action: Copy                         }

  - { key: Equals,   mods: Command,       action: IncreaseFontSize             }
  - { key: Minus,    mods: Command,       action: DecreaseFontSize             }
  
  - { key: Back,                          chars: "\x7f"                        }
  - { key: Back,     mods: Alt,           chars: "\x1b\x7f"                    }

  - { key: Insert,                        chars: "\x1b[2~"                     }
  - { key: Delete,                        chars: "\x1b[3~"                     }

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  hide_when_typing: true

selection:
  semantic_escape_chars: ",│`|:\"' ()[]{}<>"

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: true

# Mouse bindings
#
# Available fields:
# - mouse
# - action
# - mods (optional)
#
# Values for `mouse`:
# - Middle
# - Left
# - Right
# - Numeric identifier such as `5`
#
# All available `mods` and `action` values are documented in the key binding
# section.
mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

cursor:
  # Cursor style
  #
  # Values for 'style':
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  style: Block

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  unfocused_hollow: true

# dynamic_title: false

# Live config reload (changes require restart)
live_config_reload: false

# Shell
#
# You can set shell.program to the path of your favorite shell, e.g. /bin/fish.
# Entries in shell.args are passed unmodified as arguments to the shell.
# shell:
  # program: /usr/local/homebrew/bin/fish
  # args:
  #   - --command=tmux

debug:
  # Should display the render timer
  render_timer: false

  # Keep the log file after quitting Alacritty.
  persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  log_level: None

  # Print all received window events.
  print_events: false

  # Record all characters and escape sequences as test data.
  ref_test: false
